[{"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/index.js":"1","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/reportWebVitals.js":"2","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/App.js":"3","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/components/header/index.js":"4","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/shallowCompare.js":"5","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/formatKeys.js":"6","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/formatStates.js":"7","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/initialConfig.js":"8","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/configUpdater/index.js":"9","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/configUpdater/versionChecker.js":"10","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/configUpdater/unversioned.js":"11","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/styles/colors.js":"12"},{"size":493,"mtime":1609995048612,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609957545555,"results":"15","hashOfConfig":"14"},{"size":5472,"mtime":1611441091452,"results":"16","hashOfConfig":"14"},{"size":2923,"mtime":1611444421042,"results":"17","hashOfConfig":"14"},{"size":348,"mtime":1610075835310,"results":"18","hashOfConfig":"14"},{"size":789,"mtime":1610148733937,"results":"19","hashOfConfig":"14"},{"size":189,"mtime":1610077944238,"results":"20","hashOfConfig":"14"},{"size":1201,"mtime":1610518893708,"results":"21","hashOfConfig":"14"},{"size":525,"mtime":1611243347282,"results":"22","hashOfConfig":"14"},{"size":91,"mtime":1611242775935,"results":"23","hashOfConfig":"14"},{"size":137,"mtime":1611242768166,"results":"24","hashOfConfig":"14"},{"size":322,"mtime":1611443318729,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"f3zur9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/index.js",[],["52","53"],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/reportWebVitals.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/App.js",["54","55","56","57","58","59","60","61","62","63","64","65","66","67","68"],"import React, { useState } from 'react'\n\nimport ConfigUpdater from './utils/configUpdater'\n\nimport initialConfig from './utils/initialConfig'\nimport shallowCompare from './utils/shallowCompare'\nimport formatKeys from './utils/formatKeys'\nimport formatStates from './utils/formatStates'\n\nimport Header from './components/header'\n\nfunction App() {\n\n  const [config, setConfig] = useState(initialConfig)\n  const [configModified, setConfigModified] = useState(false)\n  const [selectedState, setSelectedState] = useState(null)\n  const [selectedKey, setSelectedKey] = useState(null)\n\n  const newConfig = () => {\n    if (configModified) {\n      window.confirm('There are unsaved changes in your configuration. Are you sure you want to do this?')\n      && window.location.reload()\n    } else {\n      window.location.reload()\n    }\n  }\n\n  const loadConfigRead = (filePointer) => {\n    const fileReader = new FileReader()\n    fileReader.readAsText(filePointer, 'UTF-8')\n    fileReader.onload = (e) => {\n      try {\n        const loadedConfig = JSON.parse(e.target.result)\n        const newConfig = ConfigUpdater.updateConfig(loadedConfig)\n        setConfig(newConfig)\n      } catch (e) {\n        console.error(e)\n      }\n    }\n  }\n\n  const loadConfig = (filePointer) => {\n    if (configModified) {\n      window.confirm('There are unsaved changes in your configuration. Are you sure you want to do this?')\n      && loadConfigRead(filePointer)\n    } else {\n      loadConfigRead(filePointer)\n    }\n  }\n\n  const saveConfig = () => {\n    const element = document.createElement(\"a\")\n    const file = new Blob([JSON.stringify(config)], {type: 'text/plain'})\n    element.href = URL.createObjectURL(file)\n    element.download = \"dsdconfig.json\"\n    document.body.appendChild(element)\n    element.click()\n    setConfigModified(false)\n  }\n\n  const modifyInterface = (iface, controller) => {\n    const newConfig = Object.assign({}, config)\n    newConfig.interface = iface\n    newConfig.controller = controller\n    setConfig(newConfig)\n    setConfigModified(true)\n  }\n  \n  const addState = (state) => {\n    const newConfig = Object.assign({}, config)\n    newConfig.states.push({\n      name: state.name,\n      color: state.color,\n      keys: []\n    })\n    setConfig(newConfig)\n    setConfigModified(true)\n  }\n\n  const modifyState = (stateName, state) => {\n    const newConfig = Object.assign({}, config)\n    const stateIndex = newConfig.states.findIndex(state => state.name === stateName)\n    newConfig.states[stateIndex] = {\n      name: state.name,\n      color: state.color,\n      keys: newConfig.states[stateIndex].keys \n    }\n    setConfig(newConfig)\n    setConfigModified(true)\n  }\n\n  const removeState = (stateIndex) => {\n    const newConfig = Object.assign({}, config)\n    newConfig.states.splice(stateIndex, 1)\n    setConfig(newConfig)\n    setConfigModified(true)\n    setSelectedState(null)\n  }\n\n  const setSelectedKeyHandler = (key) => {\n    if (shallowCompare(key, selectedKey)) {\n      setSelectedKey(null)\n    } else {\n      setSelectedKey(key)\n    }\n  }\n\n  const addKey = (stateName, selectedKey, data) => {\n    const newConfig = Object.assign({}, config)\n    const stateIndex = newConfig.states.findIndex(state => state.name === stateName)\n    newConfig.states[stateIndex].keys.push({\n      label: selectedKey.label,\n      keyData: selectedKey.keyData,\n      name: data.name,\n      actions: data.actions\n    })\n    setConfig(newConfig)\n    setConfigModified(true)\n  }\n\n  const modifyKey = (stateName, selectedKey, data) => {\n    const newConfig = Object.assign({}, config)\n    const stateIndex = newConfig.states.findIndex(state => state.name === stateName)\n    const keyIndex = newConfig.states[stateIndex].keys.findIndex(key => key.label === selectedKey.label)\n    newConfig.states[stateIndex].keys[keyIndex] = {\n      label: selectedKey.label,\n      keyData: selectedKey.keyData,\n      name: data.name,\n      actions: data.actions\n    }\n    setConfig(newConfig)\n    setConfigModified(true)\n  }\n\n  const removeKey = (stateName, selectedKey) => {\n    const newConfig = Object.assign({}, config)\n    const stateIndex = newConfig.states.findIndex(state => state.name === stateName)\n    const keyIndex = newConfig.states[stateIndex].keys.findIndex(key => key.label === selectedKey.label)\n    newConfig.states[stateIndex].keys.splice(keyIndex, 1)\n    setConfig(newConfig)\n    setConfigModified(true)\n  }\n\n  const states = formatStates(config)\n  const keys = formatKeys(config)\n\n  const keyStates = (keys, key) => {\n    if (key && key.label) {\n      const fKey = keys.find(cKey => cKey.label === key.label)\n      if (fKey && fKey.states) {\n        return fKey.states\n      }\n    }\n    return []\n  }\n\n  return (\n    <div>\n      <Header />\n\n      {/*<Header />\n      <Body\n        newConfig={newConfig}\n        loadConfig={loadConfig}\n        saveConfig={saveConfig}\n        interfaceConfig={{interface: config.interface, controller: config.controller}}\n        modifyInterface={modifyInterface}\n        states={states}\n        selectedState={selectedState}\n        setSelectedState={setSelectedState}\n        addState={addState}\n        modifyState={modifyState}\n        removeState={removeState}\n        keys={keys}\n        selectedKey={selectedKey}\n        selectedKeyStates={keyStates(keys, selectedKey)}\n        setSelectedKey={setSelectedKeyHandler}\n        addKey={addKey}\n        modifyKey={modifyKey}\n        removeKey={removeKey}\n      />*/}\n    </div>\n  )\n}\n\nexport default App\n","/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/components/header/index.js",["69"],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/shallowCompare.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/formatKeys.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/formatStates.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/initialConfig.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/configUpdater/index.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/configUpdater/versionChecker.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/utils/configUpdater/unversioned.js",[],"/mnt/c/Users/Jam/Repositories/dat-stream-deck-configurator/src/styles/colors.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":16,"column":10,"nodeType":"76","messageId":"77","endLine":16,"endColumn":23},{"ruleId":"74","severity":1,"message":"78","line":19,"column":9,"nodeType":"76","messageId":"77","endLine":19,"endColumn":18},{"ruleId":"74","severity":1,"message":"79","line":42,"column":9,"nodeType":"76","messageId":"77","endLine":42,"endColumn":19},{"ruleId":"74","severity":1,"message":"80","line":51,"column":9,"nodeType":"76","messageId":"77","endLine":51,"endColumn":19},{"ruleId":"74","severity":1,"message":"81","line":61,"column":9,"nodeType":"76","messageId":"77","endLine":61,"endColumn":24},{"ruleId":"74","severity":1,"message":"82","line":69,"column":9,"nodeType":"76","messageId":"77","endLine":69,"endColumn":17},{"ruleId":"74","severity":1,"message":"83","line":80,"column":9,"nodeType":"76","messageId":"77","endLine":80,"endColumn":20},{"ruleId":"74","severity":1,"message":"84","line":92,"column":9,"nodeType":"76","messageId":"77","endLine":92,"endColumn":20},{"ruleId":"74","severity":1,"message":"85","line":100,"column":9,"nodeType":"76","messageId":"77","endLine":100,"endColumn":30},{"ruleId":"74","severity":1,"message":"86","line":108,"column":9,"nodeType":"76","messageId":"77","endLine":108,"endColumn":15},{"ruleId":"74","severity":1,"message":"87","line":121,"column":9,"nodeType":"76","messageId":"77","endLine":121,"endColumn":18},{"ruleId":"74","severity":1,"message":"88","line":135,"column":9,"nodeType":"76","messageId":"77","endLine":135,"endColumn":18},{"ruleId":"74","severity":1,"message":"89","line":144,"column":9,"nodeType":"76","messageId":"77","endLine":144,"endColumn":15},{"ruleId":"74","severity":1,"message":"90","line":145,"column":9,"nodeType":"76","messageId":"77","endLine":145,"endColumn":13},{"ruleId":"74","severity":1,"message":"91","line":147,"column":9,"nodeType":"76","messageId":"77","endLine":147,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":42,"column":17,"nodeType":"94","messageId":"95","endLine":44,"endColumn":2},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'selectedState' is assigned a value but never used.","Identifier","unusedVar","'newConfig' is assigned a value but never used.","'loadConfig' is assigned a value but never used.","'saveConfig' is assigned a value but never used.","'modifyInterface' is assigned a value but never used.","'addState' is assigned a value but never used.","'modifyState' is assigned a value but never used.","'removeState' is assigned a value but never used.","'setSelectedKeyHandler' is assigned a value but never used.","'addKey' is assigned a value but never used.","'modifyKey' is assigned a value but never used.","'removeKey' is assigned a value but never used.","'states' is assigned a value but never used.","'keys' is assigned a value but never used.","'keyStates' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]